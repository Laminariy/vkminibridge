-- example for VK Mini Apps

local VKminiBridge = require "vkminibridge.vkminibridge"


function listener(self, event_type, event_data)
	if event_type == 'VKWebAppInitResult' then
		if event_data.result then
			print("App initialized")
		else
			print("Some error in app initializing")
		end

	elseif event_type == 'VKWebAppGetUserInfoResult' then
		label.set_text("#id", event_data.id)
		label.set_text("#name", event_data.first_name)
		label.set_text("#family", event_data.last_name)

	elseif event_type == 'VKWebAppGetUserInfoFailed' then
		print(string.format("Error in user get info: %s", event_data.error_type))
	end
end

function init(self)
	VKminiBridge.subscribe(listener)
	VKminiBridge.send('VKWebAppInit')

	VKminiBridge.send('VKWebAppGetUserInfo')
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
